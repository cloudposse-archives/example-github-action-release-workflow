name: Reusable - Pull Request
on:
  workflow_call:
    inputs:
      organization:
        required: true
        type: string
      repository:
        required: true
        type: string
      registry:
        description: "Docker registry"
        required: false
        type: string
        default: registry.hub.docker.com
      open:
        required: true
        type: boolean
        default: true
      labels:
        required: true
        type: string

##
##  Example how to use private shared actions
##
#    secrets:
#      github-pat:
#        required: true

env:
  ORGANIZATION: ${{ inputs.organization }}
  ACTION_REPO_NAME: ${{ inputs.repository }}

jobs:
  context:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

##
##  Example how to use private shared actions
##
#      - name: Checkout private actions
#        uses: actions/checkout@v2
#        with:
#          repository: ${{ inputs.organization }}/github
#          token: ${{ secrets.github-pat }}
#          path: github

      - name: Controller
        uses: ./github-shared-actions/actions/preview_controller
        id: controller
        with:
          labels: ${{ inputs.labels }}
          open: ${{ inputs.open }}
          env-label: |
            preview: deploy
            qa1: deploy/qa1
            qa2: deploy/qa2
            qa3: deploy/qa3
            qa4: deploy/qa4

      - id: context
        run: |
          echo "::set-output name=namespace::${{ github.event.pull_request.head.ref }}"
        shell: bash

    outputs:
      namespace: ${{ steps.context.outputs.namespace }}
      labels_env: ${{ steps.controller.outputs.labels_env }}
      labels: ${{ steps.controller.outputs.labels }}
      deploy_envs: ${{ steps.controller.outputs.deploy_envs }}
      destroy_envs: ${{ steps.controller.outputs.destroy_envs }}

  build:
    runs-on: ubuntu-latest
    if: ${{ inputs.open }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
##
##  Example how to use private shared actions
##
#      - name: Checkout private actions
#        uses: actions/checkout@v2
#        with:
#          repository: ${{ inputs.organization }}/github
#          token: ${{ secrets.github-pat }}
#          path: github

      - name: Build
        id: build
        uses: ./github-shared-actions/actions/build
        with:
          organization: ${{ inputs.organization }}
          repository: ${{ inputs.repository }}
          registry: ${{ inputs.registry }}

    outputs:
      image: ${{ steps.build.outputs.image }}
      tag: ${{ steps.build.outputs.tag }}

  deploy:
    runs-on: ubuntu-latest
    if: ${{ inputs.open && needs.context.outputs.deploy_envs != '[]'  }}
    strategy:
      matrix:
        env: ${{ fromJson(needs.context.outputs.deploy_envs) }}
    environment:
      name: ${{ matrix.env }}
      url: ${{ steps.deploy.outputs.webapp-url }}
    needs: [ context, build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
##
##  Example how to use private shared actions
##
#      - name: Checkout private actions
#        uses: actions/checkout@v2
#        with:
#          repository: ${{ inputs.organization }}/github
#          token: ${{ secrets.github-pat }}
#          path: github-shared-actions

      - name: Deploy
        uses: ./github-shared-actions/actions/deploy
        id: deploy
        with:
          stack: dev
          environment: ${{ matrix.env }}
          namespace: ${{ needs.context.outputs.namespace }}
          image: ${{ needs.build.outputs.image }}
          image-tag: ${{ needs.build.outputs.tag }}
          operation: deploy
##
##  Example how to use private shared actions
##
#          github-pat: ${{ secrets.github-pat }}

  destroy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: ${{ fromJson(needs.context.outputs.destroy_envs) }}
    needs: [ context ]
    steps:
#      - uses: simpleactions/get-last-deployment@v1.0.0
#        id: deployment
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          environment: ${{ matrix.env }}
#          ref: ${{ github.event.pull_request.head.ref }}

#      - uses: James-LeHa/Get_Deployment_ID@master
      - id: context
        run: |
          echo "::set-output name=test::${{ steps.deployment.outputs.deploymentId }}"
          echo "::set-output name=closed::${{ ! inputs.open }}"
          echo "::set-output name=deployment_exits::${{ steps.deployment.outputs.deploymentId != '' }}"
        shell: bash

      - name: Checkout
        if: ${{ steps.context.outputs.closed == 'true' && steps.context.outputs.deployment_exits == 'true' }}
        uses: actions/checkout@v3

      - uses: ./github-shared-actions/actions/get_deployment
        id: deployment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          env-name: ${{ matrix.env }}
          ref-to-search: ${{ github.event.pull_request.head.ref }}

##  Example how to use private shared actions
##
#      - name: Checkout private actions
#        uses: actions/checkout@v2
#        with:
#          repository: ${{ inputs.organization }}/github
#          token: ${{ secrets.github-pat }}
#          path: github-shared-actions

      - name: Destroy
        uses: ./github-shared-actions/actions/deploy
        if: ${{ steps.context.outputs.closed == 'true' && steps.context.outputs.deployment_exits == 'true' }}
        id: deploy
        with:
          stack: dev
          environment:  ${{ matrix.env }}
          namespace: ${{ needs.context.outputs.namespace }}
          image: "<none>"
          image-tag: "<none>"
          operation: destroy
##
##  Example how to use private shared actions
##
#          github-pat: ${{ secrets.github-pat }}

      - uses: edwardgeorge/jq-action@main
        id: label
        with:
          input: ${{ needs.context.outputs.labels_env }}
          script: ${{ format('.{0}', matrix.env) }}

      - uses: peter-murray/remove-labels-action@v1
        if: ${{ steps.context.outputs.closed == 'true' }}
        with:
          labels: ${{ steps.label.outputs.output }}

      - uses: chrnorm/deployment-status@v2.0.0
        if: ${{ steps.context.outputs.closed == 'true' && steps.context.outputs.deployment_exits == 'true' }}
        with:
          state: inactive
          token: ${{ github.token }}
          deployment-id: ${{ steps.deployment.outputs.deploymentId }}
