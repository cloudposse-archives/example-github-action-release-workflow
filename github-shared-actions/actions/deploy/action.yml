name: 'Deploy helmfile EKS'
description: 'Deploy on EKS with helmfile'
inputs:
  stack:
    description: Stack name
    required: true
  aws-region:
    description: AWS region
    required: false
    default: us-east-2
  helmfile-path:
    description: The path where lives the helmfile.
    required: false
    default: deploy
  helmfile:
    description: Helmfile name
    required: false
    default: helmfile.yaml
  operation:
    description: Operation with helmfiles. (valid options - `deploy`, `destroy`)
    required: true
    default: apply
  environment:
    description: Helmfile environment
    required: false
    default: preview
  namespace:
    description: Kubernetes namespace
    required: true
  image:
    description: Docker image
    required: true
  image-tag:
    description: Docker image tag
    required: true
outputs:
  webapp-url:
    description: "Web Application url"
    value: https://${{ inputs.namespace }}.${{ inputs.environment }}.example.com
runs:
  using: 'docker'
  image: 'Dockerfile'
  env:
    STACK: ${{ inputs.stack }}
    AWS_REGION: ${{ inputs.aws-region }}
    ENVIRONMENT: ${{ inputs.environment }}
    HELMFILE: ${{ inputs.helmfile }}
    HELMFILE_PATH: ${{ inputs.helmfile-path }}
    NAMESPACE: ${{ inputs.namespace }}
    IMAGE: ${{ inputs.image }}
    IMAGE_TAG: ${{ inputs.image-tag }}
    OPERATION: ${{ inputs.operation }}


  steps:
  - name: Setup helmfile
    uses: mamezou-tech/setup-helmfile@v1.0.0
    with:
      helmfile-version: "v0.145.0"
      helm-version: "v3.7.2"
      kubectl-version: 1.22.9
      kubectl-release-date: 2022-06-03
      install-kubectl: yes
      install-helm: yes
      install-helm-plugins: yes
      helm-diff-plugin-version: master
      helm-s3-plugin-version: master
      additional-helm-plugins: ""

  - name: Configure AWS Credentials
    uses: aws-actions/configure-aws-credentials@v1
    with:
      aws-region: ${{ inputs.aws-region }}
      role-to-assume:
      role-skip-session-tagging: true

  - name: Configure AWS Credentials
    uses: aws-actions/configure-aws-credentials@v1
    with:
      aws-region: ${{ inputs.aws-region }}
      role-to-assume:
      role-skip-session-tagging: true
      aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
      aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
      role-duration-seconds: 3000
      role-session-name: GHA-chain

  - name: S3 Sync
    uses: giboow/action-aws-cli@v1
    with:
      args: eks --region ${{ inputs.aws-region }} update-kubeconfig --name  --kubeconfig ./.kube/config

  - shell: sh
    run: |
      cat ./.kube/config
      kubectl get ns
      # Helm Deployment
      OPERATION_COMMAND="helmfile --namespace ${NAMESPACE} --environment ${ENVIRONMENT} --file ./${HELMFILE_DIR}/${HELMFILE} ${OPERATION}"
      echo "Executing: ${OPERATION_COMMAND}"
      ${OPERATION_COMMAND}

#      RELEASES_COUNTS=$(helm --namespace ${NAMESPACE} list --output json | jq 'length')
#
#      if [[ "${RELEASES_COUNTS}" == "0" ]]; then
#      kubectl delete ns ${NAMESPACE}
#      fi
    env:
      KUBECONFIG: ./.kube/config
      NAMESPACE: ${{ inputs.namespace }}
      ENVIRONMENT: ${{ inputs.environment }}
      IMAGE_NAME: ${{ inputs.image }}
      IMAGE_TAG: ${{ inputs.image-tag }}
      HELMFILE_DIR: ${{ inputs.helmfile-path }}
      HELMFILE: ${{ inputs.helmfile }}